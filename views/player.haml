%h1 プレイヤーデータ

%ul
  %li
    %a{href: url('/')} トップページに戻る
  %li
    %a{href: url('/register')} 登録フォームへ

%dl
  %dt 最終更新日時
  %dd= @last_updated_at

%h2 プロフィール
%table
  %tbody
    %tr
      %td ID
      %td= @prof.id.to_s.rjust(6, '0')
    %tr
      %td 通り名
      %td= @prof.pseudonym
    %tr
      %td プレイヤー名
      %td= @prof.name
    %tr
      %td コメント
      %td= @prof.comment
    - if @prof.team
      %tr
        %td チームID
        %td= @prof.team.id
      %tr
        %td チーム名
        %td= @prof.team.name
    - else
      %tr
        %td チーム
        %td 所属なし
    %tr
      %td プレー数
      %td= @prof.play_count
    %tr
      %td 総スタンプ数
      %td= @prof.stamp
    %tr
      %td 総おにぎり数
      %td= @prof.onigiri
    %tr
      %td 最終プレー日時
      %td= @prof.last_play_date
    %tr
      %td 最終プレー店舗
      %td= @prof.last_play_shop

%h2 楽曲データ
%h3 対平均勝敗
%table#stat_data
  %colgroup.vs_for{span: 1}
  %colgroup.basic{span: 2}
  %colgroup.medium{span: 2}
  %colgroup.hard{span: 2}
  %thead
    %tr
      %th{rowspan: 2} vs.
      %th{colspan: 2} BASIC
      %th{colspan: 2} MEDIUM
      %th{colspan: 2} HARD
      %th{colspan: 2} Total
    %tr
      %th AR
      %th MISS
      %th AR
      %th MISS
      %th AR
      %th MISS
      %th AR
      %th MISS
  %tbody
    %tr.vs_ave_win
      %td Win
      %td= @stat[:basic][:achieve_vs_ave][:win]
      %td= @stat[:basic][:miss_vs_ave][:win]
      %td= @stat[:medium][:achieve_vs_ave][:win]
      %td= @stat[:medium][:miss_vs_ave][:win]
      %td= @stat[:hard][:achieve_vs_ave][:win]
      %td= @stat[:hard][:miss_vs_ave][:win]
      %td= @stat.map {|diff, v| v[:achieve_vs_ave][:win]}.inject(:+)
      %td= @stat.map {|diff, v| v[:miss_vs_ave][:win]}.inject(:+)
    %tr.vs_ave_draw
      %td Draw
      %td= @stat[:basic][:achieve_vs_ave][:draw]
      %td= @stat[:basic][:miss_vs_ave][:draw]
      %td= @stat[:medium][:achieve_vs_ave][:draw]
      %td= @stat[:medium][:miss_vs_ave][:draw]
      %td= @stat[:hard][:achieve_vs_ave][:draw]
      %td= @stat[:hard][:miss_vs_ave][:draw]
      %td= @stat.map {|diff, v| v[:achieve_vs_ave][:draw]}.inject(:+)
      %td= @stat.map {|diff, v| v[:miss_vs_ave][:draw]}.inject(:+)
    %tr.vs_ave_lose
      %td Lose
      %td= @stat[:basic][:achieve_vs_ave][:lose]
      %td= @stat[:basic][:miss_vs_ave][:lose]
      %td= @stat[:medium][:achieve_vs_ave][:lose]
      %td= @stat[:medium][:miss_vs_ave][:lose]
      %td= @stat[:hard][:achieve_vs_ave][:lose]
      %td= @stat[:hard][:miss_vs_ave][:lose]
      %td= @stat.map {|diff, v| v[:achieve_vs_ave][:lose]}.inject(:+)
      %td= @stat.map {|diff, v| v[:miss_vs_ave][:lose]}.inject(:+)

%h3 スコアデータ
%table#score_data
  - miss_format = '%.1f'
  - ar_format = '%+.2f%%'
  %colgroup.music_name{span: 1}
  %colgroup.basic{span: 3}
  %colgroup.medium{span: 3}
  %colgroup.hard{span: 3}
  %thead
    %tr
      %th{rowspan: 2} 楽曲名
      %th{colspan: 3} BASIC
      %th{colspan: 3} MEDIUM
      %th{colspan: 3} HARD
    %tr
      %th AR
      %th MISS
      %th RANK
      %th AR
      %th MISS
      %th RANK
      %th AR
      %th MISS
      %th RANK
  %tbody
    - @song.each do |name, scores|
      %tr
        %td= CGI.escapeHTML(name)
        - scores.each do |diff, score|
          - if score
            %td
              %div== #{score[:achieve]}%
              - if score[:achieve_diff] == 0.0
                %div.ave_diff= format(ar_format, score[:achieve_diff])
              - elsif score[:achieve_diff] > 0.0
                %div.ave_diff.vs_ave_win= format(ar_format, score[:achieve_diff])
              - else
                %div.ave_diff.vs_ave_lose= format(ar_format, score[:achieve_diff])
            - case score[:miss]
            - when 0
              %td
                %div.fullcombo FC
                - if score[:miss_diff] == 0
                  %div.ave_diff= format(miss_format, score[:miss_diff])
                - elsif score[:miss_diff] < 0
                  %div.ave_diff.vs_ave_win= format(miss_format, score[:miss_diff])
                - else
                  %div.ave_diff.vs_ave_lose= format(miss_format, score[:miss_diff])
            - when 1
              %td
                %div.miss1 1
                - if score[:miss_diff] == 0
                  %div.ave_diff= format(miss_format, score[:miss_diff])
                - elsif score[:miss_diff] < 0
                  %div.ave_diff.vs_ave_win= format(miss_format, score[:miss_diff])
                - else
                  %div.ave_diff.vs_ave_lose= format(miss_format, score[:miss_diff])
            - when 2
              %td
                %div.miss2 2
                - if score[:miss_diff] == 0
                  %div.ave_diff= format(miss_format, score[:miss_diff])
                - elsif score[:miss_diff] < 0
                  %div.ave_diff.vs_ave_win= format(miss_format, score[:miss_diff])
                - else
                  %div.ave_diff.vs_ave_lose= format(miss_format, score[:miss_diff])
            - else
              %td
                %div= score[:miss]
                - if score[:miss_diff] == 0
                  %div.ave_diff= format(miss_format, score[:miss_diff])
                - elsif score[:miss_diff] < 0
                  %div.ave_diff.vs_ave_win= format(miss_format, score[:miss_diff])
                - else
                  %div.ave_diff.vs_ave_lose= format(miss_format, score[:miss_diff])
            %td= score[:rank]
          - else
            %td.noplay{colspan: 3} NO PLAY
%p== 計 #{@song.size} 曲
